"use strict";(self["webpackChunkdocumentation"]=self["webpackChunkdocumentation"]||[]).push([[882],{1260:function(n,e,t){t.d(e,{A:function(){return d}});var l=t(6768);const a=["href"];var u={__name:"ApiLink",props:{path:{type:String,required:!0}},setup(n){const e=n,t=(0,l.EW)((()=>"./api/"+e.path));return(n,e)=>((0,l.uX)(),(0,l.CE)("a",{href:t.value,target:"_blank"},[(0,l.RG)(n.$slots,"default")],8,a))}};const r=u;var d=r},1332:function(n,e,t){t.d(e,{A:function(){return E}});var l=t(6768),a=t(1387),u=t(144),r=t(4232);const d={key:0};var o={__name:"NodeTree",props:{item:{type:Array,default:()=>[]}},emits:["click"],setup(n,{emit:e}){const t=(0,a.lq)(),o=e,s=n=>({name:t.name,params:{hash:n.hash}}),i=n=>{t.params.hash===n&&o("click",n)};return(e,t)=>{const k=(0,l.g2)("node-tree",!0);return(0,l.uX)(),(0,l.CE)("li",null,[(0,l.bF)((0,u.R1)(a.Wk),{to:s(n.item),onClick:t[0]||(t[0]=e=>i(n.item.hash))},{default:(0,l.k6)((()=>[(0,l.eW)((0,r.v_)(n.item.title),1)])),_:1},8,["to"]),n.item.children&&n.item.children.length?((0,l.uX)(),(0,l.CE)("ul",d,[((0,l.uX)(!0),(0,l.CE)(l.FK,null,(0,l.pI)(n.item.children,(n=>((0,l.uX)(),(0,l.Wv)(k,{key:n.title,item:n,onClick:t[1]||(t[1]=n=>o("click",n))},null,8,["item"])))),128))])):(0,l.Q3)("",!0)])}}};const s=o;var i=s;const k={class:"table-contents"};var c={__name:"TableContents",props:{items:{type:Array,default:()=>[]}},setup(n){const e=(0,a.lq)();(0,l.sV)((()=>{e.params?.hash&&t(e.params.hash)})),(0,l.wB)((()=>e.path),(()=>t(e.params.hash)));const t=n=>{setTimeout((()=>document.getElementById(n)?.scrollIntoView({behavior:"smooth"})),400)};return(e,a)=>((0,l.uX)(),(0,l.CE)("ul",k,[((0,l.uX)(!0),(0,l.CE)(l.FK,null,(0,l.pI)(n.items,(n=>((0,l.uX)(),(0,l.Wv)(i,{key:n.title,item:n,onClick:t},null,8,["item"])))),128))]))}},h=t(1241);const L=(0,h.A)(c,[["__scopeId","data-v-3bed10b0"]]);var E=L},2462:function(n,e,t){t.d(e,{A:function(){return o}});var l=t(6768),a=t(144),u=t(6678),r={__name:"CodeBlock",props:{code:{type:String,required:!0},lang:{type:String,default:()=>"php"}},setup(n){return(e,t)=>((0,l.uX)(),(0,l.Wv)((0,a.R1)(u.Pp),(0,l.v6)({code:n.code,lang:n.lang,highlightjs:"",theme:"stackoverflow-dark"},e.$attrs),null,16,["code","lang"]))}};const d=r;var o=d},2882:function(n,e,t){t.r(e),t.d(e,{default:function(){return A}});var l=t(6768),a=t(144),u=t(1260),r=t(8522),d=t(2462),o=t(7753);const s=`\n// ${o.F} Верно\n$source = [\n    [\n        'value' => '....',\n    ],\n    [\n        'value' => '....'\n    ]\n];\n\n// ${o.g} Неверно\n$source = [\n    [\n        'value' => [\n            '...',\n            '...',\n        ]\n    ],\n    [\n        'value' => [\n            '...',\n            '...',\n        ]\n    ]\n];\n`,i="\nuse Sholokhov\\Exchange\\Fields\\Field;\nuse Sholokhov\\Exchange\\Target\\UserFields\\Enumeration;\n\n$data = [\n    [\n        'code' => 'black',\n        'title' => 'Черный'\n    ],\n    [\n        'code' => 'white',\n        'title' => 'Белый'\n    ]\n];\n\n$map = [\n    (new Field)\n        ->setFrom('code')\n        ->setTo('XML_ID')\n        ->setPrimary(),\n    (new Field)\n        ->setFrom('title'),\n        ->setTo('VALUE'),\n];\n\n$options = [\n    'entity_id' => 'HLBLOCK_1',\n    'property_code' => 'UF_COLOR'\n];\n\n$exchange = new Enumeration($options);\n$exchange->setMap($map);\n$exchange->execute($data);\n\n",k="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeUFEnumerationUpdate',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['fields']['VALUE'] = 'Теперь такое название';\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n",c="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nuse Sholokhov\\Exchange\\Target\\UserFields\\Enumeration;\nuse Sholokhov\\Exchange\\Exception\\Target\\ExchangeItemStoppedException;\n\n/**\n *  Отмена изменения элемента нужного свойства нужной сущности \n *  и записью в лог стандартного(системного) сообщения\n**/\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeUFEnumerationUpdate',\n    function(Event $event) {\n        /** @var $exchange Enumeration **/\n        $exchange = $event->getParameter('exchange');\n        $parameters = $event->getParameters();\n        \n        if (\n            $exchange->getEntityId() === 'HLBLOCK_1'\n            && $exchange->getPropertyCode() === 'UF_COLOR'\n            && $event->getParameters()['fields']['XML_ID'] === 'black'\n        ) {\n            throw new ExchangeItemStoppedException('Так захотелось');\n        }\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n",h="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeUFEnumerationUpdate',\n    fn() => new EventResult(EventResult::ERROR, ['errors' => ['Ошибка 1', 'Ошибка 2']])\n);\n",L="\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterUFEnumerationUpdate',\n    fn() => CEvent::Send(....)\n);\n",E="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeUFEnumerationAdd',\n    function(Event $event) {\n        $parameters = &$event->getParameters();\n        $parameters['fields']['VALUE'] = 'Теперь такое название';\n        \n        return new EventResult(EventResult::SUCCESS, $parameters);\n    }\n);\n",v="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\n\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeUFEnumerationAdd',\n    fn() => throw new ExchangeItemStoppedException('Так захотелось')\n);\n",p="\nuse Bitrix\\Main\\Event;\nuse Bitrix\\Main\\EventResult;\nuse Bitrix\\Main\\EventManager;\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onBeforeUFEnumerationAdd',\n    fn() => new EventResult(EventResult::ERROR, ['errors' => ['Ошибка 1', 'Ошибка 2']])\n);\n",f="\nEventManager::getInstance()->addEventHandler(\n    'sholokhov.exchange',\n    'onAfterUFEnumerationAdd',\n    fn() => CEvent::Send(....)\n);\n";var g=t(4039),m=t(1332),b=t(8394),F={__name:"ValuePage",setup(n){const e=(0,a.Kh)({tableContents:[{title:"Введение",hash:"started"},{title:"Конфигурация",hash:"configuration"},{title:"Пример",hash:"example"},{title:"События",hash:"events",children:[{title:"onBeforeUFEnumerationUpdate",hash:"before-update"},{title:"onAfterUFEnumerationUpdate",hash:"after-update"},{title:"onBeforeUFEnumerationAdd",hash:"before-add"},{title:"onAfterUFEnumerationAdd",hash:"after-add"}]}]});return(n,t)=>((0,l.uX)(),(0,l.CE)(l.FK,null,[(0,l.bF)(g.A,null,{header:(0,l.k6)((()=>t[0]||(t[0]=[(0,l.Lk)("h1",null,"Импорт значения списка",-1)]))),default:(0,l.k6)((()=>[(0,l.Lk)("p",null,[t[3]||(t[3]=(0,l.eW)(" Класс: ")),(0,l.bF)(u.A,{path:"classes/Sholokhov-Exchange-Target-UserFields-Enumeration.html"},{default:(0,l.k6)((()=>t[1]||(t[1]=[(0,l.eW)("Enumeration")]))),_:1}),t[4]||(t[4]=(0,l.Lk)("br",null,null,-1)),t[5]||(t[5]=(0,l.eW)(" Наследник класса: ")),(0,l.bF)(u.A,{path:"classes/Sholokhov-Exchange-Exchange.html"},{default:(0,l.k6)((()=>t[2]||(t[2]=[(0,l.eW)("Exchange")]))),_:1})]),(0,l.bF)(m.A,{items:e.tableContents},null,8,["items"])])),_:1}),(0,l.bF)(g.A,null,{header:(0,l.k6)((()=>t[6]||(t[6]=[(0,l.Lk)("h2",{id:"started"},"Введение",-1)]))),default:(0,l.k6)((()=>[t[9]||(t[9]=(0,l.Lk)("p",null," Импорт значений списка позволяет создавать и изменять значения списка пользовательского свойства(UF) ",-1)),(0,l.bF)(r.A,null,{header:(0,l.k6)((()=>t[7]||(t[7]=[(0,l.eW)("Внимание")]))),default:(0,l.k6)((()=>[t[8]||(t[8]=(0,l.eW)(" Импорт не поддерживает массив значений "))])),_:1}),(0,l.bF)(d.A,{code:(0,a.R1)(s)},null,8,["code"])])),_:1}),(0,l.bF)(g.A,null,{header:(0,l.k6)((()=>t[10]||(t[10]=[(0,l.Lk)("h2",{id:"configuration"},"Конфигурация",-1)]))),default:(0,l.k6)((()=>[t[14]||(t[14]=(0,l.Lk)("p",null," Импорт поддерживает следующий формат конфигурации (иные ключи пропускаются и не используются): ",-1)),(0,l.bF)(b.A,null,{head:(0,l.k6)((()=>t[11]||(t[11]=[(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"Название"),(0,l.Lk)("td",null,"Обязательное"),(0,l.Lk)("td",null,"Тип данных"),(0,l.Lk)("td",null,"Значение по умолчанию"),(0,l.Lk)("td",null,"Описание")],-1)]))),default:(0,l.k6)((()=>[t[12]||(t[12]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"entity_id"),(0,l.Lk)("td",null,"Да"),(0,l.Lk)("td",null,"string"),(0,l.Lk)("td",null,"Нет"),(0,l.Lk)("td",null,"Сущность в которую производится импорт")],-1)),t[13]||(t[13]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"property_code"),(0,l.Lk)("td",null,"Да"),(0,l.Lk)("td",null,"string"),(0,l.Lk)("td",null,"Нет"),(0,l.Lk)("td",null,"Свойство, в которое производится импорт значения")],-1))])),_:1})])),_:1}),(0,l.bF)(g.A,null,{header:(0,l.k6)((()=>t[15]||(t[15]=[(0,l.Lk)("h2",{id:"example"},"Пример",-1)]))),default:(0,l.k6)((()=>[t[16]||(t[16]=(0,l.Lk)("p",null," Разберем пример запуска импорта значения списка, для свойства, которое принадлежит справочнику (highload) ",-1)),(0,l.bF)(d.A,{code:(0,a.R1)(i)},null,8,["code"])])),_:1}),(0,l.bF)(g.A,null,{header:(0,l.k6)((()=>t[17]||(t[17]=[(0,l.Lk)("h2",{id:"events"},"События",-1)]))),default:(0,l.k6)((()=>[t[18]||(t[18]=(0,l.Lk)("p",null,[(0,l.eW)(" Импорт в ходе своей работы вызывает события, которые могут помочь произвести его модификацию и проконтролировать процесс выполнения импорта значений. "),(0,l.Lk)("br"),(0,l.eW)(" Все события реализованы на "),(0,l.Lk)("a",{href:"https://dev.1c-bitrix.ru/learning/course/index.php?COURSE_ID=43&LESSON_ID=3113",target:"_blank"},"d7"),(0,l.eW)(" Рассмотрим список доступных событий ")],-1))])),_:1}),(0,l.bF)(g.A,null,{header:(0,l.k6)((()=>t[19]||(t[19]=[(0,l.Lk)("h3",{id:"before-update"},"onBeforeUFEnumerationUpdate",-1)]))),default:(0,l.k6)((()=>[t[31]||(t[31]=(0,l.Lk)("p",null,[(0,l.eW)(" Вызывается перед обновлением значения списка. "),(0,l.Lk)("br"),(0,l.eW)(" Передаваемые параметры в обработчик ")],-1)),(0,l.bF)(b.A,null,{head:(0,l.k6)((()=>t[20]||(t[20]=[(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"Название"),(0,l.Lk)("td",null,"Обязательное"),(0,l.Lk)("td",null,"Тип данных"),(0,l.Lk)("td",null,"Передается по ссылке"),(0,l.Lk)("td",null,"Описание")],-1)]))),default:(0,l.k6)((()=>[t[21]||(t[21]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"fields"),(0,l.Lk)("td",null,"Да"),(0,l.Lk)("td",null,"array"),(0,l.Lk)("td",null,"Да"),(0,l.Lk)("td",null,"Подготовленные данные, которые будут принимать участие в обновлении.")],-1)),t[22]||(t[22]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"id"),(0,l.Lk)("td",null,"Да"),(0,l.Lk)("td",null,"int"),(0,l.Lk)("td",null,"Нет"),(0,l.Lk)("td",null,"Идентификатор значения списка, который было обновляться")],-1))])),_:1}),(0,l.bF)(r.A,null,{header:(0,l.k6)((()=>t[23]||(t[23]=[(0,l.eW)("Внимание")]))),default:(0,l.k6)((()=>[t[25]||(t[25]=(0,l.eW)(" Присутствует возможность отменить обновление значения, для этого необходимо вызвать исключение ")),(0,l.bF)(u.A,{path:"classes/Sholokhov-Exchange-Exception-Target-ExchangeItemStoppedException.html"},{default:(0,l.k6)((()=>t[24]||(t[24]=[(0,l.eW)("ExchangeItemStoppedException")]))),_:1}),t[26]||(t[26]=(0,l.eW)(" После отмены обновления производится запись в лог файл с возможностью переопределения сообщения. В качестве сообщения, для записи в лог берется сообщение исключения. "))])),_:1}),(0,l.bF)(r.A,null,{header:(0,l.k6)((()=>t[27]||(t[27]=[(0,l.eW)("Внимание")]))),default:(0,l.k6)((()=>[t[28]||(t[28]=(0,l.eW)(" Если событие вернет статут отличный от успешного, то будет считаться, что в пользовательском событии возникла ошибка, и его обновление не произойдет. ")),t[29]||(t[29]=(0,l.Lk)("br",null,null,-1)),t[30]||(t[30]=(0,l.eW)(" Присутствует возможность передачи массив ошибок, которые будут перенесены в результат работы импорта. "))])),_:1}),t[32]||(t[32]=(0,l.Lk)("h4",null,"Пример модификации данных",-1)),(0,l.bF)(d.A,{code:(0,a.R1)(k)},null,8,["code"]),t[33]||(t[33]=(0,l.Lk)("h4",null,"Пример отмены обновления",-1)),(0,l.bF)(d.A,{code:(0,a.R1)(c)},null,8,["code"]),t[34]||(t[34]=(0,l.Lk)("h4",null,"Пример передачи ошибки при выполнении события",-1)),(0,l.bF)(d.A,{code:(0,a.R1)(h)},null,8,["code"])])),_:1}),(0,l.bF)(g.A,null,{header:(0,l.k6)((()=>t[35]||(t[35]=[(0,l.Lk)("h3",{id:"after-update"},"onAfterUFEnumerationUpdate",-1)]))),default:(0,l.k6)((()=>[t[44]||(t[44]=(0,l.Lk)("p",null," Вызывается после выполнения обновления элемента. Передаваемые параметры в обработчик ",-1)),(0,l.bF)(b.A,null,{head:(0,l.k6)((()=>t[36]||(t[36]=[(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"Название"),(0,l.Lk)("td",null,"Обязательное"),(0,l.Lk)("td",null,"Тип данных"),(0,l.Lk)("td",null,"Передается по ссылке"),(0,l.Lk)("td",null,"Описание")],-1)]))),default:(0,l.k6)((()=>[t[42]||(t[42]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"fields"),(0,l.Lk)("td",null,"Да"),(0,l.Lk)("td",null,"array"),(0,l.Lk)("td",null,"Да"),(0,l.Lk)("td",null,"Подготовленные данные, которые будут принимать участие в обновлении.")],-1)),t[43]||(t[43]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"id"),(0,l.Lk)("td",null,"Да"),(0,l.Lk)("td",null,"int"),(0,l.Lk)("td",null,"Нет"),(0,l.Lk)("td",null,"Идентификатор значения списка, который будет обновляться")],-1)),(0,l.Lk)("tr",null,[t[38]||(t[38]=(0,l.Lk)("td",null,"result",-1)),t[39]||(t[39]=(0,l.Lk)("td",null,"Да",-1)),(0,l.Lk)("td",null,[(0,l.bF)(u.A,{path:"classes/Sholokhov-Exchange-Messages-DataResultInterface.html"},{default:(0,l.k6)((()=>t[37]||(t[37]=[(0,l.eW)("DataResultInterface")]))),_:1})]),t[40]||(t[40]=(0,l.Lk)("td",null,"Нет",-1)),t[41]||(t[41]=(0,l.Lk)("td",null,"Результат обновления элемента",-1))])])),_:1}),t[45]||(t[45]=(0,l.Lk)("p",null,"Событие не позволяет вмешаться в процесс обмена, а только служит флагом, дря разработчика",-1)),t[46]||(t[46]=(0,l.Lk)("h4",null,"Пример подписки на событие",-1)),(0,l.bF)(d.A,{code:(0,a.R1)(L)},null,8,["code"])])),_:1}),(0,l.bF)(g.A,null,{header:(0,l.k6)((()=>t[47]||(t[47]=[(0,l.Lk)("h3",{id:"before-add"},"onBeforeUFEnumerationAdd",-1)]))),default:(0,l.k6)((()=>[t[58]||(t[58]=(0,l.Lk)("p",null,[(0,l.eW)(" Вызывается перед созданием значения списка. "),(0,l.Lk)("br"),(0,l.eW)(" Передаваемые параметры в обработчик ")],-1)),(0,l.bF)(b.A,null,{head:(0,l.k6)((()=>t[48]||(t[48]=[(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"Название"),(0,l.Lk)("td",null,"Обязательное"),(0,l.Lk)("td",null,"Тип данных"),(0,l.Lk)("td",null,"Передается по ссылке"),(0,l.Lk)("td",null,"Описание")],-1)]))),default:(0,l.k6)((()=>[t[49]||(t[49]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"fields"),(0,l.Lk)("td",null,"Да"),(0,l.Lk)("td",null,"array"),(0,l.Lk)("td",null,"Да"),(0,l.Lk)("td",null,"Подготовленные данные, которые будут принимать участие в обновлении.")],-1))])),_:1}),(0,l.bF)(r.A,null,{header:(0,l.k6)((()=>t[50]||(t[50]=[(0,l.eW)("Внимание")]))),default:(0,l.k6)((()=>[t[52]||(t[52]=(0,l.eW)(" Присутствует возможность отменить добавления значения, для этого необходимо вызвать исключение ")),(0,l.bF)(u.A,{path:"classes/Sholokhov-Exchange-Exception-Target-ExchangeItemStoppedException.html"},{default:(0,l.k6)((()=>t[51]||(t[51]=[(0,l.eW)("ExchangeItemStoppedException")]))),_:1}),t[53]||(t[53]=(0,l.eW)(" После отмены добавления производится запись в лог файл с возможностью переопределения сообщения. В качестве сообщения, для записи в лог берется сообщение исключения. "))])),_:1}),(0,l.bF)(r.A,null,{header:(0,l.k6)((()=>t[54]||(t[54]=[(0,l.eW)("Внимание")]))),default:(0,l.k6)((()=>[t[55]||(t[55]=(0,l.eW)(" Если событие вернет статут отличный от успешного, то будет считаться, что в пользовательском событии возникла ошибка, и его добавление не произойдет. ")),t[56]||(t[56]=(0,l.Lk)("br",null,null,-1)),t[57]||(t[57]=(0,l.eW)(" Присутствует возможность передачи массив ошибок, которые будут перенесены в результат работы импорта. "))])),_:1}),t[59]||(t[59]=(0,l.Lk)("h4",null,"Пример модификации данных",-1)),(0,l.bF)(d.A,{code:(0,a.R1)(E)},null,8,["code"]),t[60]||(t[60]=(0,l.Lk)("h4",null,"Пример отмены",-1)),(0,l.bF)(d.A,{code:(0,a.R1)(v)},null,8,["code"]),t[61]||(t[61]=(0,l.Lk)("h4",null,"Пример передачи ошибки при выполнении события",-1)),(0,l.bF)(d.A,{code:(0,a.R1)(p)},null,8,["code"])])),_:1}),(0,l.bF)(g.A,null,{header:(0,l.k6)((()=>t[62]||(t[62]=[(0,l.Lk)("h3",{id:"after-add"},"onAfterUFEnumerationAdd",-1)]))),default:(0,l.k6)((()=>[t[71]||(t[71]=(0,l.Lk)("p",null," Вызывается после выполнения добавления элемента. Передаваемые параметры в обработчик ",-1)),(0,l.bF)(b.A,null,{head:(0,l.k6)((()=>t[63]||(t[63]=[(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"Название"),(0,l.Lk)("td",null,"Обязательное"),(0,l.Lk)("td",null,"Тип данных"),(0,l.Lk)("td",null,"Передается по ссылке"),(0,l.Lk)("td",null,"Описание")],-1)]))),default:(0,l.k6)((()=>[t[69]||(t[69]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"fields"),(0,l.Lk)("td",null,"Да"),(0,l.Lk)("td",null,"array"),(0,l.Lk)("td",null,"Да"),(0,l.Lk)("td",null,"Подготовленные данные, которые будут принимать участие в добавлении")],-1)),t[70]||(t[70]=(0,l.Lk)("tr",null,[(0,l.Lk)("td",null,"id"),(0,l.Lk)("td",null,"Да"),(0,l.Lk)("td",null,"int"),(0,l.Lk)("td",null,"Нет"),(0,l.Lk)("td",null,"Идентификатор значения списка, который было добавлено")],-1)),(0,l.Lk)("tr",null,[t[65]||(t[65]=(0,l.Lk)("td",null,"result",-1)),t[66]||(t[66]=(0,l.Lk)("td",null,"Да",-1)),(0,l.Lk)("td",null,[(0,l.bF)(u.A,{path:"classes/Sholokhov-Exchange-Messages-DataResultInterface.html"},{default:(0,l.k6)((()=>t[64]||(t[64]=[(0,l.eW)("DataResultInterface")]))),_:1})]),t[67]||(t[67]=(0,l.Lk)("td",null,"Нет",-1)),t[68]||(t[68]=(0,l.Lk)("td",null,"Результат добавления элемента",-1))])])),_:1}),t[72]||(t[72]=(0,l.Lk)("p",null,"Событие не позволяет вмешаться в процесс обмена, а только служит флагом, дря разработчика",-1)),t[73]||(t[73]=(0,l.Lk)("h4",null,"Пример подписки на событие",-1)),(0,l.bF)(d.A,{code:(0,a.R1)(f)},null,8,["code"])])),_:1})],64))}};const x=F;var A=x},4039:function(n,e,t){t.d(e,{A:function(){return k}});var l=t(6768);const a={class:"card mt-5 mb-5"},u={class:"card-body"},r={class:"card-text"};function d(n,e){return(0,l.uX)(),(0,l.CE)("section",a,[(0,l.Lk)("div",u,[(0,l.RG)(n.$slots,"header"),(0,l.Lk)("div",r,[(0,l.RG)(n.$slots,"default")])])])}var o=t(1241);const s={},i=(0,o.A)(s,[["render",d]]);var k=i},7753:function(n,e,t){t.d(e,{F:function(){return l},g:function(){return a}});const l="✅",a="❌"},8394:function(n,e,t){t.d(e,{A:function(){return i}});var l=t(6768);const a={class:"table-container"},u={class:"table table-bordered"};function r(n,e){return(0,l.uX)(),(0,l.CE)("div",a,[(0,l.Lk)("table",u,[(0,l.Lk)("thead",null,[(0,l.RG)(n.$slots,"head",{},void 0,!0)]),(0,l.Lk)("tbody",null,[(0,l.RG)(n.$slots,"default",{},void 0,!0)])])])}var d=t(1241);const o={},s=(0,d.A)(o,[["render",r],["__scopeId","data-v-caef40ec"]]);var i=s},8522:function(n,e,t){t.d(e,{A:function(){return s}});var l=t(6768);const a={class:"alert alert-info mt-2",role:"alert"};function u(n,e){return(0,l.uX)(),(0,l.CE)("div",a,[(0,l.Lk)("p",null,[(0,l.Lk)("b",null,[(0,l.RG)(n.$slots,"header")])]),(0,l.RG)(n.$slots,"default")])}var r=t(1241);const d={},o=(0,r.A)(d,[["render",u]]);var s=o}}]);
//# sourceMappingURL=882.1a08d0ce.js.map