"use strict";(self["webpackChunksholokhov_exchange"]=self["webpackChunksholokhov_exchange"]||[]).push([[588],{588:function(n,e,t){t.r(e),t.d(e,{default:function(){return p}});var a=t(6768),r=t(144),o=t(2462),l=t(2241);const u="\n\n$arr = [\n    ['TITLE' => 'Name1'],\n    ['TITLE' => 'Name2'],\n    // ...\n];\n\n$iterator = new EmptyIterator;\n\n$generator = function() {\n    yield ['TITLE' => 'Name1'];\n    yield ['TITLE' => 'Name2'];\n};\n\n$obj = new class implements Iterator {\n    public current() {}\n    public key() {}\n    public next() {}\n    public rewind() {}\n    public valid() {}\n}\n",c="\nuse Sholokhov\\Exchange\\Fields\\Field;\nuse Sholokhov\\Exchange\\Target\\IBlock\\Element;\nuse Sholokhov\\Exchange\\Factory\\Exchange\\MapperFactory;\n\n$options = [\n    'iblock_id' => 13\n];\n\n$data = [\n    [\n        'id' => 56,\n        'name' => 'Какой-то элемент',\n    ],\n    [\n        'id' => 15,\n        'name' => 'Какой-то элемент 2',\n    ]\n];\n\n$map = [\n    (new Field)\n        ->setFrom('id')\n        ->setTo('XML_ID')\n        ->setPrimary(),\n    (new Field)\n        ->setFrom('name')\n        ->setTo('NAME'),\n];\n\n$repository = MapperFactory::create();\n$repository->setFields($map);\n\n$exchange = new Element($options);\n$exchange->setMappingRegistry($repository);\n\n$result = $exchange->execute($data);\n";var s={__name:"CreatedPage",setup(n){return(n,e)=>((0,a.uX)(),(0,a.Wv)(l.A,null,{header:(0,a.k6)((()=>e[0]||(e[0]=[(0,a.Lk)("h1",null,"Создание первого обмена",-1)]))),default:(0,a.k6)((()=>[e[1]||(e[1]=(0,a.Lk)("p",null,[(0,a.eW)(" После установки пакета через Composer вы готовы создавать обмены данных. "),(0,a.Lk)("br"),(0,a.eW)(" Ранее мы ознакомились как производить конфигурацию обмена и настройке маршрутизации, на данном этапе разберем какой формат данных должен быть у импортируемых данных. ")],-1)),e[2]||(e[2]=(0,a.Lk)("p",null,[(0,a.eW)(" Хранилище импортируемых данных должно быть "),(0,a.Lk)("a",{href:"https://www.php.net/manual/ru/language.types.iterable.php",target:"_blank"},"итерируемым"),(0,a.eW)(". "),(0,a.Lk)("br"),(0,a.eW)(" Разберем примеры основных итерируемых значений ")],-1)),(0,a.bF)(o.A,{code:(0,r.R1)(u)},null,8,["code"]),e[3]||(e[3]=(0,a.Lk)("p",null,"Рассмотрим создание простого импорта",-1)),(0,a.bF)(o.A,{code:(0,r.R1)(c)},null,8,["code"])])),_:1}))}};const i=s;var p=i},2241:function(n,e,t){t.d(e,{A:function(){return s}});var a=t(6768);const r={class:"mb-5"};function o(n,e){return(0,a.uX)(),(0,a.CE)("article",r,[(0,a.Lk)("header",null,[(0,a.RG)(n.$slots,"header")]),(0,a.Lk)("main",null,[(0,a.RG)(n.$slots,"default")])])}var l=t(1241);const u={},c=(0,l.A)(u,[["render",o]]);var s=c},2462:function(n,e,t){t.d(e,{A:function(){return c}});var a=t(6768),r=t(144),o=t(6678),l={__name:"CodeBlock",props:{code:{type:String,required:!0},lang:{type:String,default:()=>"php"}},setup(n){return(e,t)=>((0,a.uX)(),(0,a.Wv)((0,r.R1)(o.Pp),(0,a.v6)({code:n.code,lang:n.lang,highlightjs:"",theme:"stackoverflow-dark"},e.$attrs),null,16,["code","lang"]))}};const u=l;var c=u}}]);
//# sourceMappingURL=588.654a98d8.js.map